{"version":3,"sources":["components/RecipeNavbar/index.js","pages/HomePage/index.js","pages/LoginPage/index.js","components/RecipeCard/index.js","components/RecipeGallery/index.js","pages/RecipesPage/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["RecipeNavbar","props","handleLogout","this","loginLink","activeUser","Nav","Link","href","signupLink","logoutLink","onClick","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","React","Component","HomePage","Jumbotron","Container","Button","variant","LoginPage","state","emailInput","pwdInput","invalidCredentials","loginSuccess","login","bind","setState","users","handleLogin","i","length","email","pwd","to","Alert","show","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","ev","updateEmail","target","Text","updatePwd","block","RecipeCard","recipe","Card","Img","src","img","Body","Title","name","desc","RecipeGallery","recipes","map","Col","lg","md","key","Row","RecipesPage","showModal","hideModal","createRecipe","nameInput","createRef","descInput","imgInput","newRecipe","current","addRecipe","fname","Modal","onHide","size","Header","closeButton","as","column","sm","ref","Footer","App","allRecipes","allUsers","activeUserRecipes","filter","userId","concat","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d7003161.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\n\n\n\nclass RecipeNavbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        const {handleLogout} = this.props;\n\n        const loginLink = !this.props.activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null;\n        const signupLink = !this.props.activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null;\n        const logoutLink = this.props.activeUser ? <Nav.Link onClick={() => {handleLogout()}}>Logout</Nav.Link> : null;\n\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/#/\">Recipe Book</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#home\">Recipes</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        {loginLink}\n                        {signupLink}\n                        {logoutLink}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default RecipeNavbar;","import React from 'react';\nimport {Container, Jumbotron, Button} from 'react-bootstrap';\nimport RecipeNavbar from \"../../components/RecipeNavbar/\"\n\n\nclass HomePage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n    }\n    \n    render() {\n        const {activeUser, handleLogout} = this.props;\n\n        return (\n            <div>\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout}/>\n                <Jumbotron>\n                    <Container>\n                        <h1 className=\"display-3\">Recipe Book</h1>\n                        <p>Master Your Recipes</p>\n                        <p>\n                            <Button variant=\"primary\" href=\"#/login\">Login</Button>\n                        </p>\n                    </Container>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport {Form, Button, Alert} from 'react-bootstrap'\nimport \"./index.css\"\n// import Users from '../../data-model/Users'\nimport {Redirect} from 'react-router-dom'\n\n\nclass LoginPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            emailInput: \"nir@nir.com\",\n            pwdInput: \"123\",\n            invalidCredentials: false,\n            loginSuccess: false\n        }\n\n        this.login = this.login.bind(this);\n    }\n\n\n    updateEmail(emailInput) {\n        this.setState({emailInput});\n    }\n\n    updatePwd(pwdInput) {\n        this.setState({pwdInput});\n    }\n\n    login() {\n        const {emailInput, pwdInput} = this.state;\n        const {users, handleLogin} = this.props;\n\n        let activeUser = null;\n        for (let i = 0; i < users.length && !activeUser; i++) {\n            if (users[i].email === emailInput && users[i].pwd === pwdInput) {\n                activeUser = users[i];\n            }\n        }\n\n        if (activeUser) {\n            handleLogin(activeUser);\n            this.setState({loginSuccess: true});\n        } else {\n            this.setState({invalidCredentials: true});\n        }\n    }\n\n    render() {\n\n\n        if (this.state.loginSuccess) {\n            return <Redirect to=\"/recipes\"/>\n        }\n\n        return (\n            <div className=\"login\">\n                <h1>Login to Recipe Book</h1>\n                <p>or <a href=\"#/signup\">create an account</a></p>\n                <Alert show={this.state.invalidCredentials} variant=\"danger\">\n                    Invalid email or password!\n                </Alert>                 \n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.emailInput} onChange={ev => this.updateEmail(ev.target.value)}/>\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.pwdInput} onChange={ev => this.updatePwd(ev.target.value)}/>\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"button\" block onClick={this.login}>\n                        Login\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport \"./index.css\"\n\nclass RecipeCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        const {recipe} = this.props;\n\n        return (\n            <Card className=\"recipe\">\n                <Card.Img variant=\"top\" src={recipe.img} />\n                <Card.Body>\n                    <Card.Title>{recipe.name}</Card.Title>\n                    <Card.Text>\n                        {recipe.desc}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default RecipeCard;\n","import React from 'react'\nimport {Row, Col} from 'react-bootstrap'\nimport RecipeCard from '../RecipeCard'\n\nclass RecipeGallery extends React.Component {\n    constructor(props) {\n        super(props);\n        \n    }\n    \n\n    render() {\n\n        const recipes = this.props.recipes.map(recipe =>\n            <Col lg=\"4\" md=\"6\" key={recipe.id}>\n                <RecipeCard recipe={recipe}/>\n            </Col>\n        )\n\n        return (\n            <div>\n                <Row>\n                    {recipes}\n                </Row>\n            </div>   \n        )\n    }\n}\n\nexport default RecipeGallery;\n","import React from 'react'\nimport RecipeNavbar from '../../components/RecipeNavbar'\nimport { Container, Button, Modal, Form, Row, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom'\nimport RecipeGallery from '../../components/RecipeGallery'\nimport './index.css'\n\n\nclass RecipesPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showModal: false\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.createRecipe = this.createRecipe.bind(this);\n\n        this.nameInput = React.createRef();\n        this.descInput = React.createRef();\n        this.imgInput = React.createRef();\n    }\n\n    showModal() {\n        this.setState({ showModal: true });\n    }\n\n    hideModal() {\n        this.setState({ showModal: false });\n    }\n\n    createRecipe() {\n        const newRecipe = {\n            name: this.nameInput.current.value,\n            desc: this.descInput.current.value,\n            img: this.imgInput.current.value\n        }\n\n        this.props.addRecipe(newRecipe);\n        this.setState({showModal: false});\n    }\n\n    render() {\n        const { activeUser, recipes, handleLogout } = this.props;\n        const { showModal } = this.state;\n\n        if (!activeUser) {\n            return <Redirect to=\"/\" />\n        }\n\n        // const recipesView = recipes.map(recipe => <p key={recipe.id}>{recipe.name}</p>) \n\n        return (\n            <div>\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout} />\n                <Container>\n                    <div className=\"greeting\">\n                        <h1>{activeUser.fname}'s Recipes</h1>\n                        <Button variant=\"primary\" onClick={this.showModal}>\n                            New Recipe\n                        </Button>\n                    </div>\n                    <RecipeGallery recipes={recipes} />\n                </Container>\n                <Modal show={showModal} onHide={this.hideModal} size=\"lg\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>Create New Recipe</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Group as={Row} controlId=\"formHorizontalName\">\n                                <Form.Label column sm={2}>\n                                    Name\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control ref={this.nameInput} type=\"text\" placeholder=\"Recipe Name\" />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"formHorizontalDesc\">\n                                <Form.Label column sm={2}>\n                                    Description\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control ref={this.descInput} type=\"text\" placeholder=\"Recipe Description\" />\n                                </Col>\n                            </Form.Group>\n                            <Form.Group as={Row} controlId=\"formHorizontalImg\">\n                                <Form.Label column sm={2}>\n                                    Image URL\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control ref={this.imgInput} type=\"text\" placeholder=\"Recipe Image URL\" />\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.hideModal}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.createRecipe}>\n                            Create Recipe\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default RecipesPage","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './pages/HomePage/'\nimport LoginPage from './pages/LoginPage/'\nimport RecipesPage from './pages/RecipesPage/'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport allUsers from './data-model/data/users'\nimport allRecipes from './data-model/data/recipes'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      activeUser: null,\n      allRecipes,\n      allUsers,\n      activeUserRecipes: null,\n    }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.addRecipe = this.addRecipe.bind(this);\n  }\n\n  handleLogin(activeUser) {\n    const activeUserRecipes = this.state.allRecipes.filter(recipe => recipe.userId === activeUser.id);\n    this.setState({activeUser, activeUserRecipes});\n  }\n\n  handleLogout() {\n    this.setState({\n      activeUser: null,\n      activeUserRecipes: null\n    })\n  }\n\n  addRecipe(recipe) {\n    recipe.id = this.state.allRecipes[this.state.allRecipes.length - 1].id + 1;\n    recipe.userId = this.state.activeUser.id;\n\n    const allRecipes = this.state.allRecipes.concat(recipe);\n    const activeUserRecipes = this.state.activeUserRecipes.concat(recipe);\n\n    this.setState({allRecipes, activeUserRecipes});\n  }\n\n  render() {\n    const {activeUser, allUsers, activeUserRecipes} = this.state;\n\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage activeUser={activeUser} handleLogout={this.handleLogout}/>\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage users={allUsers} handleLogin={this.handleLogin}/>\n          </Route>          \n          <Route path=\"/recipes\">\n            <RecipesPage activeUser={activeUser} recipes={activeUserRecipes} handleLogout={this.handleLogout}\n              addRecipe={this.addRecipe}/>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}